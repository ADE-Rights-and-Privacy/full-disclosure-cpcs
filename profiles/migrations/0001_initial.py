# Generated by Django 3.1.3 on 2021-02-11 08:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupingProfileSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_search_criteria', models.CharField(blank=True, help_text='Original search text as it was entered by the user', max_length=254, verbose_name='original search text')),
                ('unique_table_suffix', models.CharField(blank=True, help_text='Unique suffix used for temporary tables for this particular user and search context', max_length=254, verbose_name='unique table suffix')),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonProfileSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_search_criteria', models.CharField(blank=True, help_text='Original search text as it was entered by the user', max_length=254, verbose_name='original search text')),
                ('unique_table_suffix', models.CharField(blank=True, help_text='Unique suffix used for temporary tables for this particular user and search context', max_length=254, verbose_name='unique table suffix')),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfficerView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Automatically added timestamp recording when user viewed profile', verbose_name='timestamp')),
                ('ip_address', models.CharField(blank=True, help_text='IP address of client from which profile was viewed', max_length=50, validators=[django.core.validators.validate_ipv46_address], verbose_name='IP address')),
                ('fdp_user', models.ForeignKey(help_text='FDP user viewing the officer profile', on_delete=django.db.models.deletion.CASCADE, related_name='officer_views', related_query_name='officer_view', to=settings.AUTH_USER_MODEL, verbose_name='FDP user')),
                ('person', models.ForeignKey(help_text='Person whose officer profile was viewed', on_delete=django.db.models.deletion.CASCADE, related_name='officer_views', related_query_name='officer_view', to='core.person', verbose_name='person')),
            ],
            options={
                'verbose_name': 'Officer view',
                'verbose_name_plural': 'Officer views',
                'db_table': 'fdp_officer_view',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='OfficerSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parsed_search_criteria', models.JSONField(help_text='Search criteria entered by user after it is parsed', verbose_name='parsed search criteria')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Automatically added timestamp recording when user performed search', verbose_name='timestamp')),
                ('ip_address', models.CharField(blank=True, help_text='IP address of client from which search was performed', max_length=50, validators=[django.core.validators.validate_ipv46_address], verbose_name='IP address')),
                ('num_of_results', models.PositiveIntegerField(help_text='Total number of records matching search criteria', verbose_name='number of search results')),
                ('fdp_user', models.ForeignKey(help_text='FDP user performing the search', on_delete=django.db.models.deletion.CASCADE, related_name='officer_searches', related_query_name='officer_search', to=settings.AUTH_USER_MODEL, verbose_name='FDP user')),
            ],
            options={
                'verbose_name': 'Officer search',
                'verbose_name_plural': 'Officer searches',
                'db_table': 'fdp_officer_search',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CommandView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Automatically added timestamp recording when user viewed profile', verbose_name='timestamp')),
                ('ip_address', models.CharField(blank=True, help_text='IP address of client from which profile was viewed', max_length=50, validators=[django.core.validators.validate_ipv46_address], verbose_name='IP address')),
                ('fdp_user', models.ForeignKey(help_text='FDP user viewing the command profile', on_delete=django.db.models.deletion.CASCADE, related_name='command_views', related_query_name='command_view', to=settings.AUTH_USER_MODEL, verbose_name='FDP user')),
                ('grouping', models.ForeignKey(help_text='Grouping whose command profile was viewed', on_delete=django.db.models.deletion.CASCADE, related_name='command_views', related_query_name='command_view', to='core.grouping', verbose_name='grouping')),
            ],
            options={
                'verbose_name': 'Command view',
                'verbose_name_plural': 'Command views',
                'db_table': 'fdp_command_view',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CommandSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parsed_search_criteria', models.JSONField(help_text='Search criteria entered by user after it is parsed', verbose_name='parsed search criteria')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Automatically added timestamp recording when user performed search', verbose_name='timestamp')),
                ('ip_address', models.CharField(blank=True, help_text='IP address of client from which search was performed', max_length=50, validators=[django.core.validators.validate_ipv46_address], verbose_name='IP address')),
                ('num_of_results', models.PositiveIntegerField(help_text='Total number of records matching search criteria', verbose_name='number of search results')),
                ('fdp_user', models.ForeignKey(help_text='FDP user performing the search', on_delete=django.db.models.deletion.CASCADE, related_name='command_searches', related_query_name='command_search', to=settings.AUTH_USER_MODEL, verbose_name='FDP user')),
            ],
            options={
                'verbose_name': 'Command search',
                'verbose_name_plural': 'Command searches',
                'db_table': 'fdp_command_search',
                'ordering': ['timestamp'],
            },
        ),
    ]
