# Generated by Django 3.1.3 on 2021-02-11 08:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allegation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of allegation', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'allegation',
                'db_table': 'fdp_allegation',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AllegationOutcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of allegation outcome', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'allegation outcome',
                'db_table': 'fdp_allegation_outcome',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AttachmentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of attachment type', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'attachment type',
                'db_table': 'fdp_attachment_type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContentCaseOutcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of case outcome', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'content case outcome',
                'db_table': 'fdp_content_case_outcome',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContentIdentifierType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of category for content identifier such as a lawsuit number or IAB case number.', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'content identifier type',
                'db_table': 'fdp_content_identifier_type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of content type', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'content type',
                'db_table': 'fdp_content_type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Court',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of court', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'court',
                'db_table': 'fdp_court',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EncounterReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of encounter reason', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'encounter resaon',
                'db_table': 'fdp_encounter_reason',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GroupingRelationshipType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('hierarchy', models.CharField(choices=[('-', 'No hierarchy'), ('\\', 'Subject is superior'), ('/', 'Object is superior')], default='-', help_text='Specify for this relationship type whether the subject is superior to the object, vice-versa, or there is no hierarchy', max_length=1, verbose_name='hierarchy')),
                ('name', models.CharField(help_text='Name of the relationship between two groupings', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'type of relationship between two groupings',
                'verbose_name_plural': 'types of relationships between two groupings',
                'db_table': 'fdp_grouping_relationship_type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='IncidentLocationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of incident location type', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'incident location type',
                'db_table': 'fdp_incident_location_type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='IncidentTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of incident tag', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'incident tag',
                'db_table': 'fdp_incident_tag',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LeaveStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text="Name of leave status for a person's payment such as active or ceased.", max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'leave status',
                'verbose_name_plural': 'leave statuses',
                'db_table': 'fdp_leave_status',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PersonGroupingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Category for a link between a person and grouping', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'person grouping type',
                'db_table': 'fdp_person_grouping_type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PersonIdentifierType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text="Name of category for person identifier such as a driver's license number or passport number.", max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'person identifier type',
                'db_table': 'fdp_person_identifier_type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PersonIncidentTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of tag for a link between a person and an incident', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'person incident tag',
                'db_table': 'fdp_person_incident_tag',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PersonRelationshipType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('hierarchy', models.CharField(choices=[('-', 'No hierarchy'), ('\\', 'Subject is superior'), ('/', 'Object is superior')], default='-', help_text='Specify for this relationship type whether the subject is superior to the object, vice-versa, or there is no hierarchy', max_length=1, verbose_name='hierarchy')),
                ('name', models.CharField(help_text='Name of the relationship between two persons', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'type of relationship between two persons',
                'verbose_name_plural': 'types of relationships between two persons',
                'db_table': 'fdp_person_relationship_type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SituationRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of category for a link between a person and online content, generic content, case content and incidents.', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'situation role',
                'db_table': 'fdp_situation_role',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of state', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'State',
                'db_table': 'fdp_state',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of title', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'title',
                'db_table': 'fdp_title',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TraitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Trait type to group traits, such as gender, race or similar', max_length=254, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'trait type',
                'db_table': 'fdp_trait_type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Name of county', max_length=254, verbose_name='name')),
                ('state', models.ForeignKey(help_text='State in which county exists', on_delete=django.db.models.deletion.CASCADE, related_name='counties', related_query_name='county', to='supporting.state', verbose_name='state')),
            ],
            options={
                'verbose_name': 'county',
                'verbose_name_plural': 'counties',
                'db_table': 'fdp_county',
                'ordering': ['state', 'name'],
                'unique_together': {('state', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Trait',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('name', models.CharField(help_text='Trait to describe a person in the system, such as a gender (e.g. male), race (e.g. black), or other characterstic (e.g. homeless)', max_length=254, verbose_name='name')),
                ('type', models.ForeignKey(blank=True, help_text='Category used to group trait', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='traits', related_query_name='trait', to='supporting.traittype', verbose_name='type')),
            ],
            options={
                'verbose_name': 'trait',
                'db_table': 'fdp_trait',
                'ordering': ['type', 'name'],
                'unique_together': {('type', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, help_text='Select if record is archived', verbose_name='Is archived')),
                ('address', models.CharField(blank=True, help_text='Full address for location', max_length=254, verbose_name='address')),
                ('county', models.ForeignKey(help_text='County for location', on_delete=django.db.models.deletion.CASCADE, related_name='locations', related_query_name='location', to='supporting.county', verbose_name='county')),
            ],
            options={
                'verbose_name': 'Location',
                'db_table': 'fdp_location',
                'ordering': ['county'],
                'unique_together': {('county', 'address')},
            },
        ),
    ]
